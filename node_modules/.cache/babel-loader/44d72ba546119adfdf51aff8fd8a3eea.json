{"ast":null,"code":"export default class PokemonService {\n  static getPokemons() {\n    return fetch('http://localhost:3001/pokemons').then(response => response.json()).catch(error => this.handleError(error));\n  }\n\n  static getPokemon(id) {\n    return fetch(`http://localhost:3001/pokemons/${id}`).then(response => response.json()).then(data => this.isEmpty(data) ? null : data).catch(error => this.handleError(error));\n  }\n\n  static updatePokemon(pokemon) {\n    return;\n  }\n\n  static isEmpty(data) {\n    return Object.keys(data).length === 0;\n  }\n\n  static handleError(e) {\n    console.error(e);\n  }\n\n}","map":{"version":3,"sources":["/Users/Lapin/ItProjects/udemy/react-pokemon-app/src/services/pokemon-service.ts"],"names":["PokemonService","getPokemons","fetch","then","response","json","catch","error","handleError","getPokemon","id","data","isEmpty","updatePokemon","pokemon","Object","keys","length","e","console"],"mappings":"AAEA,eAAe,MAAMA,cAAN,CAAqB;AAEhC,SAAOC,WAAP,GAAyC;AACrC,WAAOC,KAAK,CAAC,gCAAD,CAAL,CACFC,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,EAEFC,KAFE,CAEIC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAFb,CAAP;AAGH;;AAED,SAAOE,UAAP,CAAkBC,EAAlB,EAAqD;AACjD,WAAOR,KAAK,CAAE,kCAAiCQ,EAAG,EAAtC,CAAL,CACFP,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,EAEFF,IAFE,CAEGQ,IAAI,IAAI,KAAKC,OAAL,CAAaD,IAAb,IAAqB,IAArB,GAA4BA,IAFvC,EAGFL,KAHE,CAGIC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAHb,CAAP;AAIH;;AAED,SAAOM,aAAP,CAAqBC,OAArB,EAAgD;AAC5C;AACH;;AAED,SAAOF,OAAP,CAAeD,IAAf,EAAsC;AAClC,WAAOI,MAAM,CAACC,IAAP,CAAYL,IAAZ,EAAkBM,MAAlB,KAA6B,CAApC;AACH;;AAED,SAAOT,WAAP,CAAmBU,CAAnB,EAAiC;AAC7BC,IAAAA,OAAO,CAACZ,KAAR,CAAcW,CAAd;AACH;;AAzB+B","sourcesContent":["import Pokemon from \"../models/pokemon\";\n\nexport default class PokemonService {\n\n    static getPokemons(): Promise<Pokemon[]> {\n        return fetch('http://localhost:3001/pokemons')\n            .then(response => response.json())\n            .catch(error => this.handleError(error));\n    }\n\n    static getPokemon(id: number): Promise<Pokemon|null> {\n        return fetch(`http://localhost:3001/pokemons/${id}`)\n            .then(response => response.json())\n            .then(data => this.isEmpty(data) ? null : data)\n            .catch(error => this.handleError(error));\n    }\n\n    static updatePokemon(pokemon:Pokemon) : Pokemon {\n        return\n    }\n\n    static isEmpty(data: Object): boolean {\n        return Object.keys(data).length === 0;\n    }\n\n    static handleError(e:Error):void {\n        console.error(e);\n    }\n}"]},"metadata":{},"sourceType":"module"}